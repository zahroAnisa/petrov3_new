{"version":3,"sources":["../../../src/@ionic-native/plugins/video-player/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAkBxE;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AASH;IAAiC,+BAAiB;IAAlD;;IAsBA,CAAC;IApBC;;;;;OAKG;IAEH,0BAAI,GAAJ,UAAK,OAAe,EAAE,OAAsB,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEvE;;OAEG;IAEH,2BAAK,GAAL,cAAgB,CAAC;IACZ,sBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,0BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAZA;QADC,OAAO,EAAE;;;;2CAC6D;IAMvE;QADC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;4CACP;IAfN,WAAW;QARvB,MAAM,CAAC;YACN,UAAU,EAAE,aAAa;YACzB,MAAM,EAAE,yDAAyD;YACjE,SAAS,EAAE,aAAa;YACxB,IAAI,EAAE,qDAAqD;YAC3D,SAAS,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC;OAEW,WAAW,CAsBvB;IAAD,kBAAC;CAtBD,AAsBC,CAtBgC,iBAAiB,GAsBjD;SAtBY,WAAW","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\n/**\n * Options for the video playback using the `play` function.\n */\nexport interface VideoOptions {\n  /**\n * Set the initial volume of the video playback, where 0.0 is 0% volume and 1.0 is 100%.\n * For example: for a volume of 30% set the value to 0.3.\n */\n  volume?: number;\n  /**\n   * There are two options for the scaling mode. SCALE_TO_FIT which is default and SCALE_TO_FIT_WITH_CROPPING.\n   * These strings are the only ones which can be passed as option.\n   */\n  scalingMode?: number;\n}\n\n/**\n * @name Video Player\n * @description\n * A Cordova plugin that simply allows you to immediately play a video in fullscreen mode.\n *\n * Requires Cordova plugin: `com.moust.cordova.videoplayer`. For more info, please see the [VideoPlayer plugin docs](https://github.com/moust/cordova-plugin-videoplayer).\n *\n * @usage\n * ```typescript\n * import { VideoPlayer } from '@ionic-native/video-player';\n *\n * constructor(private videoPlayer: VideoPlayer) { }\n *\n * ...\n *\n * // Playing a video.\n * this.videoPlayer.play('file:///android_asset/www/movie.mp4').then(() => {\n *  console.log('video completed');\n * }).catch(err => {\n *  console.log(err);\n * });\n *\n * ```\n * @interfaces\n * VideoOptions\n */\n@Plugin({\n  pluginName: 'VideoPlayer',\n  plugin: 'https://github.com/moust/cordova-plugin-videoplayer.git',\n  pluginRef: 'VideoPlayer',\n  repo: 'https://github.com/moust/cordova-plugin-videoplayer',\n  platforms: ['Android']\n})\n\nexport class VideoPlayer extends IonicNativePlugin {\n\n  /**\n   * Plays the video from the passed url.\n   * @param fileUrl {string} File url to the video.\n   * @param options {VideoOptions?} Optional video playback settings. See options above.\n   * @returns {Promise<any>} Resolves promise when the video was played successfully.\n   */\n  @Cordova()\n  play(fileUrl: string, options?: VideoOptions): Promise<any> { return; }\n\n  /**\n   * Stops the video playback immediatly.\n   */\n  @Cordova({ sync: true })\n  close(): void { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}